#!/bin/bash

function ssed(){
    usage(){
        cat <<< """Usage:
        $(basename $0) <key> <value> <file>
        $(basename $0) -k <key> -v <value> -f <file> -d '-' -r
        >>> 请勿两种形式混用, 
        For example: 
            $(basename $0) username tom ~/user
            $(basename $0) -k username -v tom -f ~/user -d ': '

        -r, --reverse    使key在后,value在前(类似hosts文件)

        -d, --delimiter  key和value的连接符, 默认为'='

        -k, --key        键

        -v, --value      值

        -f, --file       需要查找修改的文件
        """
        echo $@
        exit 1
    }
    
    # 参数收集
    local TEMP=$(getopt -o rd:k:v:f:  --long reverse,delimiter,key:,value:,file: -n 'error' -- "$@")
    if [ $? != 0 ] ; then usage "Terminating..." >&2 ; fi
    
    # 参数重排
    eval set -- "$TEMP"

    # 参数定义
    while true ; do
        case "$1" in
            -r|--reverse)   local REVERSE=on     ; shift 2 ;;
            -d|--delimiter) local DELIMITER=$2   ; shift 2 ;;
            -k|--key)       local KEY=$2         ; shift 2 ;;
            -v|--value)     local VALUE=$2       ; shift 2 ;;
            -f|--file)      local FILE=$2        ; shift 2 ;;
            --) shift ; break ;;
            *) usage "Internal error!" ;;
        esac
    done

    # 初始化参数
    local FLAG=${KEY}
    DELIMITER=${DELIMITER:='='}
    KEY=${KEY:="$1"}
    VALUE=${VALUE:="$2"}
    FILE=${FILE:="$3"}

    # "-r"或者"--reverse"设置key在后value在前的形式(比如hosts文件)
    [[ ! -z ${REVERSE} ]] && read KEY VALUE <<< "${VALUE} ${KEY}"

    # 参数检查(文件不存在就直接touch文件)
    [[ -z ${KEY}   ]] && usage "Please specify a key"
    [[ -z ${VALUE} ]] && usage "Please specify a value"
    [[ ! -f ${FILE}  ]] && touch ${FILE}
    [[ ! -r ${FILE}  ]] && usage "$(basename $0): can't read ${FILE}: Permission denied"

    grep -q "^${FLAG}" ${FILE} && sed -i "s/^${FLAG}.*/${KEY}${DELIMITER}${VALUE}/" ${FILE} || echo "${KEY}${DELIMITER}${VALUE}" >> ${FILE}
}

ssed $@
