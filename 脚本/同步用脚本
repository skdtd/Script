#!/bin/bash



DELAYTIME=1                     # 延迟启动(秒): 超过这个时间没有新的数据改动就触发同步操作
MONIT_DIR="/opt"
HOSTS="root@192.168.100.102"

#####################################################################
# 文件删除
#####################################################################
delrsync(){
    for HOST in HOSTS
    do
        rsync -qac --rsync-path="rm -rf $@ && rsync" "$@" ${HOST}:
    done
}


#####################################################################
# 文件修改
#####################################################################
modrsync(){
    for HOST in HOSTS
    do
        rsync -qac --rsync-path="mkdir -p $1 && rsync" "$2" ${HOST}:"$1"
    done
}

#####################################################################
# 将LOG采集处理后交由rsync同步
#####################################################################
headleThead(){
    # while可以一次性全部读出,而不会分段读取
    while read -t ${DELAYTIME} LINE
    do
        echo $LINE
    done <&1023 | awk '$3==""{next}
    $2~/DELETE|MOVED_FROM/
        {dlist=dlist" "$1$3}
    $2~/CREATE|CLOSE_WRITE|MOVED_TO|ATTRIB/ && index(mlist[$1],$3)==0
        {mlist[$1]=$3" "mlist[$1]}
    END{
        dlist!=""{system("delrsync "dlist)};
        for(dir in mlist){
            system("modrsync "dir" "mlist[dir])
        }
    }'
}

# 设置为全局变量,使之成为回调函数
export -f delrsync modrsync headleThead

#####################################################################
# 防止二重启动
#####################################################################
run(){
    local TOKEN=$1
    local CMD=$2
    shift 2
    [ "${FLOCKER}" != "${TOKEN}" ] && exec env FLOCKER="${TOKEN}" flock -en "${TOKEN}" -c "${CMD}" "$@" || :
}

#####################################################################
# 监控线程
#####################################################################
monitorThead(){
    local UUID=$(cat /proc/sys/kernel/random/uuid)      # 用于管道名和二重启动识别标志
    local PIPE=/tmp/.${UUID}
    mkfifo $PIPE
    exec 1023<>$PIPE
    rm -rf $PIPE
    inotifywait -mrqe attrib,close_write,move,create,delete --format '%w %e %f' "${MONIT_DIR}" | \
    while read LINE
    do
        echo $LINE >&1023 && run ${UUID}
    done
}

monitorThead


