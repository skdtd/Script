# docker 二进制安装

## 获取docker二进制文件版本最新版
```bash
echo $(curl https://download.docker.com/linux/static/stable/x86_64/) | grep -Po "docker.*?\." | uniq | grep -Ev "ce|rootless" | sed -n '$p'
```
## 下载解压并复制到启动目录
```bash
curl -C - -o docker-20.10.7.tgz https://download.docker.com/linux/static/stable/x86_64/docker-20.10.7.tgz  # -C - 自动断点续传
tar -zvxf docker-19.03.6.tgz
cp docker/* /usr/bin/
```
## 启动dcoker
```bash
/usr/bin/dockerd
```

### 设置为服务
```bash
vim /etc/systemd/system/docker.service
chmod +x /etc/systemd/system/docker.service
```
```ini
[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network-online.target firewalld.service
Wants=network-online.target

[Service]
Type=notify
ExecStart=/usr/bin/dockerd
ExecReload=/bin/kill -s HUP $MAINPID
LimitNOFILE=infinity
LimitNPROC=infinity
TimeoutStartSec=0
Delegate=yes
KillMode=process
Restart=on-failure
StartLimitBurst=3
StartLimitInterval=60s

[Install]
WantedBy=multi-user.target
```
```bash
systemctl daemon-reload             #重载配置文件
systemctl start docker              #启动Docker
systemctl stop docker               #关闭docker
systemctl restart  docker           #重启docker
systemctl enable docker.service     #设置开机自启
systemctl status docker             #查看Docker状态
```








# k8s安装
## kubectl
```shell
# 下载最新版kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

# 非root用户安装
mkdir -p ~/.local/bin/kubectl
mv ./kubectl ~/.local/bin/kubectl
tee -a ~/.bashrc << EOF
export PATH=$PATH:~/.local/bin/kubectl

# root用户安装
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

```

## cfssl
```shell
curl -L --remote-name-all https://github.com/cloudflare/cfssl/releases/download/v${CFSSL_VERSION}/{cfssljson_${CFSSL_VERSION}_linux_amd64,cfssl_${CFSSL_VERSION}_linux_amd64,cfssl-certinfo_${CFSSL_VERSION}_linux_amd64}

chmod +x cfssl*

for name in `ls cfssl*`; do mv $name ${name%_${CFSSL_VERSION}_linux_amd64}; done

mv cfssl* /usr/bin

tee /opt/ssl/k8sca/ca-config.json << EOF
{
    "signing": {
        "default": {
            "expiry": "87600h"
        },
        "profiles": {
            "kubernetes": {
                "usages": [
                    "signing",
                    "key encipherment",
                    "server auth",
                    "client auth"
                ],
                "expiry": "87600h"
            }
        }
    }
}
EOF

tee /opt/ssl/k8sca/ca-csr.json << EOF
{
    "CN": "kubernetes",
    "key": {
        "algo": "rsa",
        "size": 2048
    },
    "names": [
        {
            "C": "CN",
            "L": "Shanghai",
            "O": "kubernetes",
            "ST": "Shanghai",
            "OU": "kubernetes"
        }
    ]
}
EOF
```