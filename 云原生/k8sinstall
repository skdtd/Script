# [1. 开放生产端口](https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#check-required-ports)

```md
master: 入站
6443        kubernetes API服务器        所有组件
2379-2380   etcd服务器客户端API         kube-apiserver,etcd
10250       kubelet API                kubelet自身,控制平面组件
10251       kube-scheduler             kube-scheduler自身
20252       kube-controller-manager    kube-controller-manager自身

node: 入站
10250       kubelet API                kubelet自身,控制平面组件
30000-32767 NodePort服务               所有组件
```

# 2. 设置节点环境(所有节点)
## 1. 设置主机名
```shell
hostnamectl set-hostname k8s-01
echo "127.0.0.1 $(hostname)" >> /etc/hosts
```
## 2. 关闭selinux
```shell
sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
setenforce 0
```
## 3. 关闭swap
```shell
swapoff -a
sed -ri 's/.*swap.*/#&/'/etc/fstab
free -m # 确认swap为空
```
## 4. [配置桥接流量](https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#%E5%85%81%E8%AE%B8-iptables-%E6%A3%80%E6%9F%A5%E6%A1%A5%E6%8E%A5%E6%B5%81%E9%87%8F)
```shell
modprobe br_netfilter
lsmod | grep br_netfilter

tee /etc/modules-load.d/k8s.conf << EOF
br_netfilter
EOF

tee /etc/sysctl.d/k8s.conf << EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

sysctl --system
```

# 3. 安装容器运行时(docker)
```shell
sudo yum remove docker*
sudo yum install -y yum-utils
#配置docker yum 源
sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
#安装docker 19.03.9
yum install -y docker-ce-3:19.03.9-3.el7.x86_64  docker-ce-cli-3:19.03.9-3.el7.x86_64 containerd.io

#安装docker 19.03.9   docker-ce  19.03.9
yum install -y docker-ce-19.03.9-3  docker-ce-cli-19.03.9 containerd.io

#启动服务
systemctl start docker
systemctl enable docker

#配置加速
sudo mkdir -p /etc/docker
sudo tee /etc/docker/daemon.json <<-'EOF'
{
  "registry-mirrors": ["https://shanghai.mirror.aliyuncs.com/"]
}
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
```



# 4. 安装k8s
> 开始yum缓存可以直接发送安装包
> 用`--downloadonly`和`--downloaddir`指定安装包下载位置(如果不用`--downloadonly`则会现在本机安装)
## 1. 安装引导程序(kubeadm)
```shell
# 配置K8S的yum源
cat << EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF

# 卸载旧版本
yum remove -y kubelet kubeadm kubectl

# 查看可以安装的版本
yum list kubelet --showduplicates | sort -r

# 安装kubelet、kubeadm、kubectl 指定版本
yum install -y kubelet-1.22.1 kubeadm-1.22.1 kubectl-1.22.1

# 开机启动kubelet
systemctl enable kubelet && systemctl start kubelet
```

## 2. 下载镜像
```shell
# docker设置代理
mkdir -p /etc/systemd/system/docker.service.d
tee /etc/systemd/system/docker.service.d/http-proxy.conf <<-'EOF'
[Service]
Environment="HTTP_PROXY=http://proxy-addr:proxy-port" "HTTPS_PROXY=http://proxy-addr:proxy-port" "NO_PROXY=localhost,127.0.0.1,docker-registry.somecorporation.com"
EOF
# 下载镜像
images=(
  kube-apiserver:v1.21.0
  kube-proxy:v1.21.0
  kube-controller-manager:v1.21.0
  kube-scheduler:v1.21.0
  coredns:v1.8.0
  etcd:3.4.13-0
  pause:3.4.1
)
for imageName in ${images[@]} ; do
    docker pull registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images/$imageName
done


# 查看引导需要的基础镜像
kubeadm config images list
```

## 3. 引导master
```shell
kubeadm init \  # 本机IP, 负载均衡, pod网络范围不能重复
--apiserver-advertise-address=10.170.11.8 \ # API server地址(私有网络地址,其他节点可通信的地址)
--image-repository registry.cn-hangzhou.aliyuncs.com/lfy_k8s_images \  # 镜像仓库地址
--kubernetes-version v1.21.0 \  # k8s版本
--service-cidr=10.96.0.0/16 \  # 负载均衡网络范围
--pod-network-cidr=192.168.0.0/16  # pod网络范围

## init完成后第一步：复制相关文件夹
# To start using your cluster, you need to run the following as a regular user:

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

## 导出环境变量
# Alternatively, if you are the root user, you can run:

export KUBECONFIG=/etc/kubernetes/admin.conf
### 部署一个pod网络
# You should now deploy a pod network to the cluster.
# Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
#   https://kubernetes.io/docs/concepts/cluster-administration/addons/
##############如下：安装calico#####################
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml


# 命令检查
kubectl get pod -A  # 查看所有pod运行信息
kubectl get nodes  # 查看所有工作节点
```

## 4. 添加工作节点
```shell
kubeadm token create --print-join-command
kubeadm token create --ttl 0 --print-join-command
```



